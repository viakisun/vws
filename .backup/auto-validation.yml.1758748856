name: 자동 검증 및 품질 관리

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 2 * * *' # 매일 오전 2시 (KST 오전 11시)
  workflow_dispatch:

jobs:
  code-quality:
    name: 코드 품질 검사
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 린트 검사 (PR/Push=errors only, Schedule=strict)
        run: |
          if [ "${{ github.event_name }}" = "schedule" ]; then
            pnpm run lint:strict
          else
            pnpm run lint:ci
          fi

      - name: 포맷 검사
        run: pnpm format && pnpm format:check

      - name: 빌드 테스트
        run: pnpm build

  security-scan:
    name: 보안 검사
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 보안 감사
        run: pnpm run security:audit

  auto-validation:
    name: 자동 검증
    runs-on: ubuntu-latest
    timeout-minutes: 10
    needs: [code-quality, security-scan]

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 린트 검사
        run: pnpm run lint --max-warnings 10

  dependency-analysis:
    name: 의존성 분석
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: pnpm-lock.yaml

      - uses: pnpm/action-setup@v4
        with:
          version: 9
          run_install: false

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: 의존성 분석
        run: |
          echo "📦 의존성 분석 시작"
          pnpm ls --depth=0
          echo "✅ 의존성 분석 완료"

  notification:
    name: 알림 전송
    runs-on: ubuntu-latest
    needs: [code-quality, security-scan, auto-validation, dependency-analysis]
    if: always()

    steps:
      - name: 성공 알림
        if: ${{ needs.code-quality.result == 'success' && needs.security-scan.result == 'success' && needs.auto-validation.result == 'success' && needs.dependency-analysis.result == 'success' }}
        uses: 8398a7/action-slack@v3
        with:
          status: success
          channel: '#vws_action'
          text: '✅ 모든 검증 통과: ${{ github.ref_name }} 브랜치'
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: 실패 알림
        if: ${{ !success() }}
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          channel: '#vws_action'
          text: |
            ❌ 검증 실패: ${{ github.ref_name }} 브랜치
            - code-quality: ${{ needs.code-quality.result }}
            - security-scan: ${{ needs.security-scan.result }}
            - auto-validation: ${{ needs.auto-validation.result }}
            - dependency-analysis: ${{ needs.dependency-analysis.result }}
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
