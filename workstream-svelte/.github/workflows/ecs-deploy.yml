name: ECS Deploy

on:
  workflow_dispatch:

env:
  AWS_REGION: ap-northeast-2
  ECR_REPOSITORY: workstream-svelte
  ECS_CLUSTER: workstream-cluster
  ECS_SERVICE: workstream-service

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Render task definition
        id: taskdef
        run: |
          IMAGE_URI=${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest
          sed -e "s#\${IMAGE_URI}#${IMAGE_URI}#g" \
              -e "s#\${EXEC_ROLE_ARN}#${{ secrets.ECS_EXEC_ROLE_ARN }}#g" \
              -e "s#\${TASK_ROLE_ARN}#${{ secrets.ECS_TASK_ROLE_ARN }}#g" infra/ecs-task-def.json > rendered-task-def.json

      - name: Register task definition
        id: register
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: rendered-task-def.json

      - name: Deploy ECS service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v2
        with:
          task-definition: ${{ steps.register.outputs.task-definition-arn }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true
