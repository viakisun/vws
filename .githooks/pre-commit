#!/bin/bash

# 이름 처리 표준화 검증 Pre-commit Hook

echo "🔍 이름 및 날짜 처리 표준화 검증 중..."

# 변경된 파일들 중 이름/날짜 처리와 관련된 파일들 검사
CHANGED_FILES=$(git diff --cached --name-only)

# 이름 처리 관련 파일들 필터링
NAME_RELATED_FILES=$(echo "$CHANGED_FILES" | grep -E '\.(ts|js|svelte)$' | grep -E '(name|employee|assignee|담당자|이름)')

# 날짜 처리 관련 파일들 필터링
DATE_RELATED_FILES=$(echo "$CHANGED_FILES" | grep -E '\.(ts|js|svelte)$' | grep -E '(date|time|날짜|시간)')

ALL_RELATED_FILES=$(echo -e "$NAME_RELATED_FILES\n$DATE_RELATED_FILES" | sort -u)

if [ -n "$ALL_RELATED_FILES" ]; then
    echo "📋 관련 파일들:"
    echo "$ALL_RELATED_FILES"
    echo ""
    
    # 금지된 패턴 검사
    VIOLATIONS=0
    
    for file in $ALL_RELATED_FILES; do
        # 이름 처리 금지된 패턴들 검사 (표준 함수 파일들 제외)
        if [[ "$file" != "src/lib/utils/korean-name.ts" && "$file" != "src/lib/utils/name-validation.ts" ]]; then
            if git show ":$file" | grep -E "(first_name.*\+.*[\"']\s[\"'].*\+.*last_name|last_name.*\+.*[\"']\s[\"'].*\+.*first_name|\`\$\{.*\}\s\$\{.*\}\`)" > /dev/null; then
                echo "❌ $file: 금지된 이름 조합 패턴 발견"
                echo "   직접 문자열 결합 대신 formatEmployeeName() 또는 formatKoreanNameStandard() 사용"
                VIOLATIONS=$((VIOLATIONS + 1))
            fi
            
            # 공백을 포함한 한국 이름 패턴 검사
            if git show ":$file" | grep -E "[\"'][가-힣]+\s[가-힣]+[\"']" > /dev/null; then
                echo "❌ $file: 한국 이름에 공백 포함 패턴 발견"
                echo "   표준 형식: (성)(이름) - 공백 없음"
                VIOLATIONS=$((VIOLATIONS + 1))
            fi
        fi
        
        # 날짜 처리 금지된 패턴들 검사 (date-handler.ts, timezone-validation 제외)
        if [ "$file" != "src/lib/utils/date-handler.ts" ] && [[ "$file" != *"timezone-validation"* ]]; then
            if git show ":$file" | grep -E "\.toLocaleDateString\(|\.toLocaleString\(|new Date\(.*\).*toISOString" > /dev/null; then
                echo "❌ $file: 금지된 날짜 처리 패턴 발견"
                echo "   직접 toLocaleDateString() 대신 formatDateForDisplay() 사용"
                VIOLATIONS=$((VIOLATIONS + 1))
            fi
        fi
        
        # Date 생성자 직접 사용 검사 (date-handler.ts, timezone-validation 제외)
        if [ "$file" != "src/lib/utils/date-handler.ts" ] && [[ "$file" != *"timezone-validation"* ]]; then
            if git show ":$file" | grep -E "new Date\([^)]*\)(?!.*toUTC)" > /dev/null; then
                echo "❌ $file: Date 생성자 직접 사용 패턴 발견"
                echo "   날짜 생성 시 toUTC() 함수를 사용하여 표준화"
                VIOLATIONS=$((VIOLATIONS + 1))
            fi
        fi
    done
    
    if [ $VIOLATIONS -gt 0 ]; then
        echo ""
        echo "🚫 표준화 위반 $VIOLATIONS 건 발견"
        echo ""
        echo "📖 이름 처리 표준 가이드라인:"
        echo "   ✅ formatEmployeeName(employee)"
        echo "   ✅ formatKoreanNameStandard(fullName)"
        echo "   ✅ createStandardEmployeeName(employee)"
        echo "   ❌ first_name + ' ' + last_name"
        echo "   ❌ '차 지은' (공백 포함)"
        echo "   ✅ '차지은' (공백 없음)"
        echo ""
        echo "📖 날짜 처리 표준 가이드라인:"
        echo "   ✅ toUTC(userInput)"
        echo "   ✅ formatDateForDisplay(utcDate)"
        echo "   ✅ formatDateForInput(utcDate)"
        echo "   ❌ new Date().toLocaleDateString()"
        echo "   ❌ date.toISOString() (직접 사용)"
        echo "   ✅ UTC 저장, 서울 시간 표시"
        echo ""
        echo "수정 후 다시 커밋해주세요."
        exit 1
    else
        echo "✅ 모든 이름 및 날짜 처리가 표준을 준수합니다."
    fi
fi

echo "✅ 이름 및 날짜 처리 검증 완료"
